{"version":3,"sources":["store.js","components/Text.js","blocks.js","diamonds/BackfaceMaterial.js","diamonds/RefractionMaterial.js","diamonds/Diamonds.js","CustomMaterial.js","index.js"],"names":["state","sections","pages","zoom","images","diamonds","x","offset","pos","Vector3","factor","top","createRef","Text","children","size","left","right","bottom","color","opacity","height","layers","font","props","data","useLoader","FontLoader","geom","usePromise","Promise","res","TextBufferGeometry","curveSegments","onUpdate","useCallback","self","box","geometry","computeBoundingBox","boundingBox","getSize","position","y","ref","useRef","last","current","useFrame","shift","lerp","scale","frustumCulled","attach","transparent","MultilineText","text","lineHeight","split","map","index","key","offsetContext","createContext","Block","useBlock","parentOffset","sectionHeight","undefined","curY","curTop","Provider","value","useThree","viewport","useContext","viewportWidth","width","viewportHeight","canvasWidth","canvasHeight","mobile","margin","contentMaxWidth","offsetFactor","BackfaceMaterial","ShaderMaterial","constructor","super","vertexShader","fragmentShader","side","BackSide","RefractionMaterial","options","uniforms","envMap","backfaceMap","resolution","dummy","Object3D","Diamonds","gltf","GLTFLoader","useMemo","scene","center","console","log","gl","camera","clock","model","ratio","getPixelRatio","envFbo","WebGLRenderTarget","backfaceFbo","texture","backfaceMaterial","refractionMaterial","forEach","i","t","getElapsedTime","set","copy","rotation","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","autoClear","setRenderTarget","clearColor","render","clearDepth","material","args","length","__$","CustomMaterial","hasTexture","Color","this","extend","Plane","Hero","alignCenter","Footer","alignRight","Content","Stripe","Math","PI","Pages","TextureLoader","minFilter","LinearFilter","img1","img2","img3","img4","img5","pixelWidth","style","textAlign","fontSize","fontWeight","Startup","App","scrollArea","onScroll","e","target","scrollTop","useEffect","orthographic","fallback","className","Array","fill","_","id","class","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.43b9e05d.chunk.js","sourcesContent":["import { createRef } from \"react\"\nimport { Vector3 } from \"three\"\n\nconst state = {\n  sections: 7,\n  pages: 7,\n  zoom: 75,\n  images: [\"/001.jpg\", \"/002.jpg\", \"/003.jpg\", \"/004.jpg\", \"/005.jpg\", \"/006.jpg\"],\n  diamonds: [\n    { x: 0, offset: 1.1, pos: new Vector3(), factor: 1.25 },\n    { x: 0, offset: 2.1, pos: new Vector3(), factor: 1.5 },\n    { x: 0, offset: 3.1, pos: new Vector3(), factor: 1.75 },\n    { x: 0, offset: 4.1, pos: new Vector3(), factor: 2.00 }\n  ],\n  top: createRef()\n}\n\nexport default state\n","import { FontLoader, Vector3, TextBufferGeometry } from \"three\"\nimport React, { useCallback, useRef } from \"react\"\nimport { useLoader, useFrame } from \"react-three-fiber\"\nimport usePromise from \"react-promise-suspense\"\nimport lerp from \"lerp\"\nimport state from \"../store\"\n\nfunction Text({ children, size = 1, left, right, top, bottom, color = \"white\", opacity = 1, height = 0.01, layers = 0, font = \"/Fraunces_Regular.json\", ...props }) {\n  const data = useLoader(FontLoader, font)\n  const geom = usePromise(() => new Promise(res => res(new TextBufferGeometry(children, { font: data, size: 1, height, curveSegments: 32 }))), [children])\n  const onUpdate = useCallback(\n    self => {\n      const box = new Vector3()\n      self.geometry.computeBoundingBox()\n      self.geometry.boundingBox.getSize(box)\n      self.position.x = left ? 0 : right ? -box.x : -box.x / 2\n      self.position.y = top ? 0 : bottom ? -box.y : -box.y / 2\n    },\n    [left, right, top, bottom]\n  )\n\n  const ref = useRef()\n  let last = state.top.current\n  useFrame(() => {\n    ref.current.shift = lerp(ref.current.shift, (state.top.current - last) / 100, 0.1)\n    last = state.top.current\n  })\n\n  return (\n    <group {...props} scale={[size, size, 0.1]}>\n      <mesh geometry={geom} onUpdate={onUpdate} frustumCulled={false}>\n        <customMaterial ref={ref} attach=\"material\" color={color} transparent opacity={opacity} />\n      </mesh>\n    </group>\n  )\n}\n\nconst MultilineText = ({ text, size = 1, lineHeight = 1, position = [0, 0, 0], ...props }) =>\n  text.split(\"\\n\").map((text, index) => <Text key={index} size={size} {...props} position={[position[0], position[1] - index * lineHeight, position[2]]} children={text} />)\n\nexport { Text, MultilineText }\n","import React, { createContext, useRef, useContext } from \"react\"\nimport { useFrame, useThree } from \"react-three-fiber\"\nimport lerp from \"lerp\"\nimport state from \"./store\"\n\nconst offsetContext = createContext(0)\n\nfunction Block({ children, offset, factor, ...props }) {\n  const { offset: parentOffset, sectionHeight } = useBlock()\n  const ref = useRef()\n  offset = offset !== undefined ? offset : parentOffset\n  useFrame(() => {\n    const curY = ref.current.position.y\n    const curTop = state.top.current\n    ref.current.position.y = lerp(curY, (curTop / state.zoom) * factor, 0.1)\n  })\n  return (\n    <offsetContext.Provider value={offset}>\n      <group {...props} position={[0, -sectionHeight * offset * factor, 0]}>\n        <group ref={ref}>{children}</group>\n      </group>\n    </offsetContext.Provider>\n  )\n}\n\nfunction useBlock() {\n  const { sections, pages, zoom } = state\n  const { size, viewport } = useThree()\n  const offset = useContext(offsetContext)\n  const viewportWidth = viewport.width\n  const viewportHeight = viewport.height\n  const canvasWidth = viewportWidth / zoom\n  const canvasHeight = viewportHeight / zoom\n  const mobile = size.width < 700\n  const margin = canvasWidth * (mobile ? 0.2 : 0.1)\n  const contentMaxWidth = canvasWidth * (mobile ? 0.8 : 0.6)\n  const sectionHeight = canvasHeight * ((pages - 1) / (sections - 1))\n  const offsetFactor = (offset + 1.0) / sections\n  return {\n    viewport,\n    offset,\n    viewportWidth,\n    viewportHeight,\n    canvasWidth,\n    canvasHeight,\n    mobile,\n    margin,\n    contentMaxWidth,\n    sectionHeight,\n    offsetFactor\n  }\n}\n\nexport { Block, useBlock }\n","import { ShaderMaterial, BackSide } from \"three\"\n\nexport default class BackfaceMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      vertexShader: `varying vec3 worldNormal;\n      void main() {\n        vec4 transformedNormal = vec4(normal, 0.);\n        vec4 transformedPosition = vec4(position, 1.0);\n        #ifdef USE_INSTANCING\n          transformedNormal = instanceMatrix * transformedNormal;\n          transformedPosition = instanceMatrix * transformedPosition;\n        #endif\n        worldNormal = normalize(modelViewMatrix * transformedNormal).xyz;\n        gl_Position = projectionMatrix * modelViewMatrix * transformedPosition;\n      }`,\n      fragmentShader: `varying vec3 worldNormal;\n      void main() {\n        gl_FragColor = vec4(worldNormal, 1.0);\n      }`,\n      side: BackSide\n    })\n  }\n}\n","import { ShaderMaterial } from \"three\"\n\nexport default class RefractionMaterial extends ShaderMaterial {\n  constructor(options) {\n    super({\n      vertexShader: `varying vec3 worldNormal;\n      varying vec3 viewDirection;\n      void main() {\n        vec4 transformedNormal = vec4(normal, 0.);\n        vec4 transformedPosition = vec4(position, 1.0);\n        #ifdef USE_INSTANCING\n          transformedNormal = instanceMatrix * transformedNormal;\n          transformedPosition = instanceMatrix * transformedPosition;\n        #endif\n        worldNormal = normalize( modelViewMatrix * transformedNormal).xyz;\n        viewDirection = normalize((modelMatrix * vec4( position, 1.0)).xyz - cameraPosition);;\n        gl_Position = projectionMatrix * modelViewMatrix * transformedPosition;\n      }`,\n      fragmentShader: `uniform sampler2D envMap;\n      uniform sampler2D backfaceMap;\n      uniform vec2 resolution;\n      varying vec3 worldNormal;\n      varying vec3 viewDirection;\n      float fresnelFunc(vec3 viewDirection, vec3 worldNormal) {\n        return pow(1.05 + dot(viewDirection, worldNormal), 100.0);\n      }\n      void main() {\n        vec2 uv = gl_FragCoord.xy / resolution;\n        vec3 normal = worldNormal * (1.0 - 0.4) - texture2D(backfaceMap, uv).rgb * 0.4;\n        vec4 color = texture2D(envMap, uv += refract(viewDirection, normal, 0.01/1.5).xy);\n        \n        // vec3 matColor = mix(color.rgb, vec3(0.01, 0.01, 0.01), 0.8);\n        gl_FragColor = vec4(mix(color.rgb, vec3(0.98,0.87,0.77), fresnelFunc(viewDirection, normal)), 1.0);\n      }`,\n      uniforms: {\n        envMap: { value: options.envMap },\n        backfaceMap: { value: options.backfaceMap },\n        resolution: { value: options.resolution }\n      }\n    })\n  }\n}\n","import { WebGLRenderTarget, Object3D } from \"three\"\nimport React, { useRef, useMemo } from \"react\"\nimport { useLoader, useThree, useFrame } from \"react-three-fiber\"\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\nimport lerp from \"lerp\"\nimport { useBlock } from \"./../blocks\"\nimport BackfaceMaterial from \"./BackfaceMaterial\"\nimport RefractionMaterial from \"./RefractionMaterial\"\nimport state from \"./../store\"\n\nconst dummy = new Object3D()\nexport default function Diamonds() {\n  const gltf = useLoader(GLTFLoader, \"/shikki_2.glb\")\n  useMemo(() => gltf.scene.children[0].geometry.center(), [])\n  \n  console.log(gltf.scene);\n  \n  const { size, gl, scene, camera, clock } = useThree()\n  const { contentMaxWidth, sectionHeight } = useBlock()\n  const model = useRef()\n  const ratio = gl.getPixelRatio()\n\n  const [envFbo, backfaceFbo, backfaceMaterial, refractionMaterial] = useMemo(() => {\n    const envFbo = new WebGLRenderTarget(size.width * ratio, size.height * ratio)\n    const backfaceFbo = new WebGLRenderTarget(size.width * ratio, size.height * ratio)\n    const backfaceMaterial = new BackfaceMaterial()\n    const refractionMaterial = new RefractionMaterial({\n      envMap: envFbo.texture,\n      backfaceMap: backfaceFbo.texture,\n      resolution: [size.width * ratio, size.height * ratio]\n    })\n    return [envFbo, backfaceFbo, backfaceMaterial, refractionMaterial]\n  }, [size, ratio])\n\n  useFrame(() => {\n    state.diamonds.forEach((data, i) => {\n      const t = clock.getElapsedTime() / 2\n      const { x, offset, factor } = data\n      data.pos.set(x, lerp(data.pos.y, -sectionHeight * offset * factor + (state.top.current / state.zoom) * factor, 0.1), 0)\n      dummy.position.copy(data.pos)\n      dummy.rotation.set(t, t, t)\n      dummy.scale.set(contentMaxWidth / 30, contentMaxWidth / 30, contentMaxWidth / 30)\n      dummy.updateMatrix()\n      model.current.setMatrixAt(i, dummy.matrix)\n      model.current.instanceMatrix.needsUpdate = true\n    })\n\n    gl.autoClear = false\n    camera.layers.set(0)\n    gl.setRenderTarget(envFbo)\n    gl.clearColor()\n    gl.render(scene, camera)\n    gl.clearDepth()\n    camera.layers.set(1)\n    model.current.material = backfaceMaterial\n    gl.setRenderTarget(backfaceFbo)\n    gl.clearDepth()\n    gl.render(scene, camera)\n    camera.layers.set(0)\n    gl.setRenderTarget(null)\n    gl.render(scene, camera)\n    gl.clearDepth()\n    camera.layers.set(1)\n    model.current.material = refractionMaterial\n    gl.render(scene, camera)\n  }, 1)\n\n  return (\n    <instancedMesh ref={model} layers={1} args={[null, null, state.diamonds.length]} position={[0, 0, -1.0]}>\n      <bufferGeometry attach=\"geometry\" {...gltf.__$[1].geometry} />\n    </instancedMesh>\n  )\n}\n","import { ShaderMaterial, Color } from \"three\"\nimport { extend } from \"react-three-fiber\"\n\nclass CustomMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      vertexShader: `uniform float scale;\n      uniform float shift;\n      varying vec2 vUv;\n      void main() {\n        vec3 pos = position;\n        pos.y = pos.y + ((sin(uv.x * 3.1415926535897932384626433832795) * shift * 5.0) * 0.125);\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.);\n      }`,\n      fragmentShader: `uniform sampler2D texture;\n      uniform float hasTexture;\n      uniform float shift;\n      uniform float scale;\n      uniform vec3 color;\n      uniform float opacity;\n      varying vec2 vUv;\n      void main() {\n        float angle = 1.55;\n        vec2 p = (vUv - vec2(0.5, 0.5)) * (1.0 - scale) + vec2(0.5, 0.5);\n        vec2 offset = shift / 4.0 * vec2(cos(angle), sin(angle));\n        vec4 cr = texture2D(texture, p + offset);\n        vec4 cga = texture2D(texture, p);\n        vec4 cb = texture2D(texture, p - offset);\n        if (hasTexture == 1.0) gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\n        else gl_FragColor = vec4(color, opacity);\n      }`,\n      uniforms: {\n        texture: { value: null },\n        hasTexture: { value: 0 },\n        scale: { value: 0 },\n        shift: { value: 0 },\n        opacity: { value: 1 },\n        color: { value: new Color(\"white\") }\n      }\n    })\n  }\n\n  set scale(value) {\n    this.uniforms.scale.value = value\n  }\n\n  get scale() {\n    return this.uniforms.scale.value\n  }\n\n  set shift(value) {\n    this.uniforms.shift.value = value\n  }\n\n  get shift() {\n    return this.uniforms.shift.value\n  }\n\n  set map(value) {\n    this.uniforms.hasTexture.value = !!value\n    this.uniforms.texture.value = value\n  }\n\n  get map() {\n    return this.uniforms.texture.value\n  }\n\n  get color() {\n    return this.uniforms.color.value\n  }\n\n  get opacity() {\n    return this.uniforms.opacity.value\n  }\n\n  set opacity(value) {\n    if (this.uniforms) this.uniforms.opacity.value = value\n  }\n}\n\nextend({ CustomMaterial })\n","import ReactDOM from \"react-dom\"\nimport lerp from \"lerp\"\nimport React, { Suspense, useRef, useEffect } from \"react\"\nimport { Canvas, Dom, useFrame, useLoader } from \"react-three-fiber\"\nimport {TextureLoader, LinearFilter } from \"three\"\nimport { Text, MultilineText } from \"./components/Text\"\nimport { Block, useBlock } from \"./blocks\"\nimport Diamonds from \"./diamonds/Diamonds\"\nimport state from \"./store\"\nimport \"./CustomMaterial\"\nimport \"./styles.css\"\n\nfunction Plane({ color = \"white\", map, ...props }) {\n  const { viewportHeight, offsetFactor } = useBlock()\n  const material = useRef()\n  let last = state.top.current\n  useFrame(() => {\n    const { pages, top } = state\n    material.current.scale = lerp(material.current.scale, offsetFactor - top.current / ((pages - 1) * viewportHeight), 0.1)\n    material.current.shift = lerp(material.current.shift, (top.current - last) / 150, 0.1)\n    last = top.current\n  })\n  return (\n    <mesh {...props}>\n      <planeBufferGeometry attach=\"geometry\" args={[1, 1, 32, 32]} />\n      <customMaterial ref={material} attach=\"material\" color={color} map={map} />\n    </mesh>\n  )\n}\n\n\nfunction Hero({ children, map }) {\n  const { contentMaxWidth, canvasWidth, margin } = useBlock()\n  const aspect = 1.75\n  const alignCenter = (canvasWidth - contentMaxWidth) / 2\n  return (\n    <group position={[alignCenter, 0, 0]}>\n      <Text center size={contentMaxWidth * 0.08} position={[-contentMaxWidth / 3, contentMaxWidth / 12.4, -1]} color=\"#eeeeee\">\n        Making of\n      </Text>\n      <Text center size={contentMaxWidth * 0.08} position={[-contentMaxWidth / 3, -contentMaxWidth / 12.4, -1]} color=\"#eeeeee\">\n        Shikki\n      </Text>\n      {/* <Plane scale={[contentMaxWidth/10, contentMaxWidth / 10, 1]} color=\"#bfe2ca\" map={map} /> */}\n    </group>\n  )\n}\n\nfunction Footer({ left, children, map }) {\n  const { contentMaxWidth, canvasWidth, margin } = useBlock()\n  const aspect = 1.75\n  const alignRight = (canvasWidth - contentMaxWidth - margin) / 2\n  return (\n    <group position={[alignRight * (left ? -1 : 1), 0, 0]}>\n      {children}\n    </group>\n  )\n}\n\nfunction Content({ left, children, map }) {\n  const { contentMaxWidth, canvasWidth, margin } = useBlock()\n  const aspect = 1.75\n  const alignRight = (canvasWidth - contentMaxWidth - margin) / 2\n  return (\n    <group position={[alignRight * (left ? -1 : 1), 0, 0]}>\n      <Plane scale={[contentMaxWidth, contentMaxWidth / aspect, 1]} map={map} />\n      {children}\n    </group>\n  )\n}\n\n\n\nfunction Stripe() {\n  const { contentMaxWidth } = useBlock()\n  return <Plane scale={[100, contentMaxWidth, 1]} rotation={[0, 0, Math.PI / 4]} position={[0, 0, -1]} color=\"#171725\" />\n}\n\nfunction Pages() {\n  const textures = useLoader(TextureLoader, state.images)\n  const [img1, img2, img3, img4, img5, img6] = textures.map(texture => ((texture.minFilter = LinearFilter), texture))\n  const { contentMaxWidth, mobile, canvasWidth, canvasHeight } = useBlock()\n  const aspect = 1.75\n  const pixelWidth = contentMaxWidth * state.zoom\n  return (\n    <>\n      {/* Title Section */}\n      <Block factor={1.5} offset={0}>\n        <Hero/>\n        {/* <Dom style={{ \n            // width: pixelWidth / (mobile ? 1 : 2), \n            textAlign: \"center\",\n            fontSize:'72px'\n            }} \n            position={[0.3, -1, 1]}>\n            Making of Echizen Shikki\n        </Dom> */}\n      </Block>\n      {/* First section */}\n      <Block factor={2.0} offset={1}>\n        <Content left map={img1}>\n          {/* <MultilineText top left size={contentMaxWidth * 0.05} lineHeight={contentMaxWidth / 5} position={[-contentMaxWidth / 2.0, 0, -1]} color=\"#2fe8c3\" text={\"four\\nzero\\nzero\"} font = \"/Fraunces_Regular.json\" /> */}\n          <Dom top style={{ width: pixelWidth / (mobile ? 1 : 2), textAlign: \"left\", fontSize:'64px', fontWeight:'bold' }} position={[-contentMaxWidth / 2.0, -contentMaxWidth / 3.2, 1]}>\n            木地\n          </Dom>\n          <Dom top style={{ width: pixelWidth / (mobile ? 1 : 2), textAlign: \"left\" }} position={[-contentMaxWidth / 2.0, -contentMaxWidth / 2.3, 1]}>\n            木地の仕事は、乾燥した木材を切り、削り、加工して漆器のカタチを作ります。\n            木地師さんは、お椀などをつくる「丸物木地師」と、重箱やお盆など箱物をつくる「角物木地師」に分かれています。丸物と角物では、それぞれ使われる木材や道具が違います。木地師さんの仕事は下仕事ですが、漆器をつくる最初の仕事なのでとても大切な役割をになっています。\n          </Dom>\n        </Content>\n      </Block>\n      {/* Second section */}\n      <Block factor={2.0} offset={2}>\n        <Content map={img2} >\n          <Dom top style={{ width: pixelWidth / (mobile ? 1 : 2), textAlign: \"right\", fontSize:'64px', fontWeight:'bold'}} position={[mobile ? -contentMaxWidth / 2 : 0, -contentMaxWidth / 2 / aspect - 0.4, 1]}>\n            下地\n          </Dom>\n          <Dom top style={{ width: pixelWidth / (mobile ? 1 : 2), textAlign: \"right\" }} position={[mobile ? -contentMaxWidth / 2 : 0, -contentMaxWidth / 2.3, 1]}>\n            「下地師」の仕事は、漆器を丈夫にする大切な仕事です。下地の方法には「本堅地」と「渋下地」という二つの方法があります。どちらも木の割れやすいところに布を着せて補強します。「本堅地」は、生漆（きうるし）と米のり、地の粉をまぜたものを何回も塗り重ねます。「渋下地」は、越前漆器の伝統的な下地方法で丸物におこなわれてきました。渋柿の汁「柿渋」に地炭粉を混ぜ、何度も塗り重ねます。漆も柿渋も乾くと堅くなり、何度も塗りと研ぎをくり返すことで、丈夫な漆器が作られます。\n          </Dom>\n        </Content>\n      </Block>\n      {/* Second section */}\n      <Block factor={2.0} offset={3}>\n        <Content left map={img3}>\n          <Dom top style={{ width: pixelWidth / (mobile ? 1 : 2), textAlign: \"left\", fontSize:'64px', fontWeight:'bold' }} position={[-contentMaxWidth / 2.0, -contentMaxWidth / 3.2, 1]}>\n            中塗り\n          </Dom>\n          <Dom top style={{ width: pixelWidth / (mobile ? 1 : 2), textAlign: \"left\" }} position={[-contentMaxWidth / 2.0, -contentMaxWidth / 2.3, 1]}>\n            下地の工程を終了した木地に、刷毛で漆を塗っていきます。使用する漆はどのような加飾・仕上げをするかによって使い分けることになります。中塗りでは、中塗漆が用いられます。黒で仕上げる場合は黒中塗漆、その他は透中塗漆となります。漆ムロで乾燥させた後、炭で水研ぎを行い表面を平らにします\n          </Dom>\n        </Content>\n      </Block>\n      {/* Second section */}\n      <Block factor={2.0} offset={4}>\n        <Content map={img4}>\n          <Dom top style={{ width: pixelWidth / (mobile ? 1 : 2), textAlign: \"right\", fontSize:'64px', fontWeight:'bold' }} position={[mobile ? -contentMaxWidth / 2 : 0, -contentMaxWidth / 2 / aspect - 0.4, 1]}>\n            上塗り\n          </Dom>\n          <Dom top style={{ width: pixelWidth / (mobile ? 1 : 2), textAlign: \"right\" }} position={[mobile ? -contentMaxWidth / 2 : 0, -contentMaxWidth / 2.3, 1]}>\n            上塗りでは、上塗漆が用いられます。黒で仕上げる場合は黒中塗漆、その他は透中塗漆となります。色漆は透中塗漆と顔料を混ぜて練り合わせ用いられます。上塗漆は精製の段階で油分が混入されており中塗よりもツヤのある塗り上がりとなります。呂色漆は精製の段階で油分は混入されていません\n          </Dom>\n        </Content>\n      </Block>\n\n      {/* Second section */}\n      <Block factor={2.0} offset={5}>\n        <Content left map={img5}>\n          <Dom top style={{ width: pixelWidth / (mobile ? 1 : 2), textAlign: \"left\", fontSize:'64px', fontWeight:'bold' }} position={[-contentMaxWidth / 2.0, -contentMaxWidth / 3.2, 1]}>\n            加飾\n          </Dom>\n          <Dom top style={{ width: pixelWidth / (mobile ? 1 : 2), textAlign: \"left\" }} position={[-contentMaxWidth / 2.0, -contentMaxWidth / 2.3, 1]}>\n            うるしを塗った器物に文様など装飾することを加飾と言います。代表的な蒔絵（まきえ）や螺鈿（らでん）をはじめ芸術性の高い多くの加飾法で飾られ、重要文化財（国宝）に指定された作品などは美しい絵柄が楽しめます\n          </Dom>\n        </Content>\n      </Block>\n\n      {/* Stripe */}\n      <Block factor={-1.0} offset={4}>\n        <Stripe />\n      </Block>\n      {/* Last section */}\n      <Block factor={1.5} offset={6}>\n        <Footer left map={img5}>\n          <MultilineText top left size={contentMaxWidth * 0.015} lineHeight={contentMaxWidth * 0.02} position={[-contentMaxWidth / 2.0, 0, -1]} color=\"#cccccc\" font = \"/Inter.json\" \n            text={\n              \"Source : \\nhttp://ichirin.hateblo.jp/entry/2014/06/26/234303\\nhttps://hidehiranuri.jp/craftmanship.html\\nhttp://ichirin.hateblo.jp/entry/2014/06/27/163217\\nhttps://dearfukui.jp/industry/1615\"\n            } \n          />\n        </Footer>\n      </Block>\n    </>\n  )\n}\n\nfunction Startup() {\n  const ref = useRef()\n  useFrame(() => (ref.current.material.opacity = lerp(ref.current.material.opacity, 0, 0.025)))\n  return (\n    <mesh ref={ref} position={[0, 0, 200]} scale={[100, 100, 1]}>\n      <planeBufferGeometry attach=\"geometry\" />\n      <meshBasicMaterial attach=\"material\" color=\"#070712\" transparent />\n    </mesh>\n  )\n}\n\nfunction App() {\n  const scrollArea = useRef()\n  const onScroll = e => (state.top.current = e.target.scrollTop)\n  useEffect(() => void onScroll({ target: scrollArea.current }), [])\n  return (\n    <>\n      <Canvas orthographic camera={{ zoom: state.zoom, position: [0, 0, 500] }}>\n        <Suspense fallback={<Dom center className=\"loading\" children=\"Loading...\" />}>\n          <Diamonds />\n          <Pages />\n          <Startup />\n        </Suspense>\n      </Canvas>\n      <div className=\"scrollArea\" ref={scrollArea} onScroll={onScroll}>\n        {/* <div style={{ height: `${state.pages * 100}vh` }} /> */}\n        {new Array(state.sections).fill().map((_, index) => (\n          index == 0?(\n            <div key={index} id={\"0\" + index} style={{ height: `${(state.pages / state.sections) * 100}vh` }} >\n              <div>\n                <div class=\"mouse\"><span></span></div>\n              </div>\n            </div>\n          ):(\n            <div key={index} id={\"0\" + index} style={{ height: `${(state.pages / state.sections) * 100}vh` }} />\n          )\n        ))}\n      </div>\n    </>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}